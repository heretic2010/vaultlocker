---

- name: Install dependencies (curl, gnupg, etc.)
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  loop:
    - curl
    - gnupg
    - software-properties-common
    - vaultlocker
    - wget 
    - net-tools 
    - apt-transport-https
    - cryptsetup

- name: Install vault via snap
  community.general.snap:
    name:
      - vault

- name: Install pip3 (Debian/Ubuntu)
  ansible.builtin.apt:
    name: python3-pip
    state: present
    update_cache: yes     

- name: Install hvac library via pip3
  ansible.builtin.pip:
    name: hvac
    executable: pip3
    version: "0.11.2"
    state: present

- name: Deploy configuration from template
  ansible.builtin.template:
    src: vault-policy.j2
    dest: /root/vault-policy.hcl
    owner: root
    group: root
    mode: '0777'

- name: vault policy write vaultlocker vault-policy.hcl via command
  ansible.builtin.command: "vault policy write {{ policy_name }} vault-policy.hcl"
  environment:
    VAULT_ADDR: "{{ vault_addr }}"
    VAULT_TOKEN: "{{ vault_token }}"


- name: vault secrets enable -path=vaultlocker/ kv
  ansible.builtin.command: "vault secrets enable -path={{policy_name}}/ kv"
  environment:
    VAULT_ADDR: "{{ vault_addr }}"
    VAULT_TOKEN: "{{ vault_token }}"

- name: vault auth enable approle
  ansible.builtin.command: "vault auth enable approle"
  environment:
    VAULT_ADDR: "{{ vault_addr }}"
    VAULT_TOKEN: "{{ vault_token }}"

- name: vault write auth/approle/role/{{ policy_name}} secret_id_ttl=100m token_ttl=200m token_max_ttl=300m  policies='default'
  ansible.builtin.command: "vault write auth/approle/role/{{ policy_name }} secret_id_ttl=100m token_ttl=200m token_max_ttl=300m  policies='{{ policy_name}}'"
  environment:
    VAULT_ADDR: "{{ vault_addr }}"
    VAULT_TOKEN: "{{ vault_token }}"

- name: vault write auth/approle/role/{{ policy_name }} bound_cidr_list=192.168.0.7/24 token_bound_cidrs=192.168.0.7/24 policies=vaultlocker
  ansible.builtin.command: "vault write auth/approle/role/vaultlocker bound_cidr_list=192.168.0.7/24 token_bound_cidrs=192.168.0.7/24 policies='{{ policy_name}}'"
  environment:
    VAULT_ADDR: "{{ vault_addr }}"
    VAULT_TOKEN: "{{ vault_token }}"

- debug:
    msg: "{{ lookup('hashi_vault', 'secret=auth/approle/role/{{ policy_name }}/role-id token={{ vault_token }} url={{ vault_addr }}')}}"

- name: Read role-id from vault
  community.hashi_vault.vault_read:
    url: "{{ vault_addr }}"
    path: auth/approle/role/{{ policy_name }}/role-id
    token: "{{ vault_token }}"   
  register: role_id


- name: Generate a secret-id for the given approle
  community.hashi_vault.vault_write:
    url: "{{ vault_addr }}"
    token: "{{ vault_token }}"
    path: auth/approle/role/{{ policy_name }}/secret-id
  register: secret_id

# - debug:
#     msg: "{{ lookup('hashi_vault', 'secret=auth/approle/role/{{ policy_name }}/secret-id token={{ vault_token }} url={{ vault_addr }}')}}"

- name: Display all registered secret_id
  debug:
    msg: "{{ secret_id.data['data']['secret_id'] }}"

- name: create directory for vaultlocker
  ansible.builtin.file:
    path: /etc/vaultlocker
    state: directory
    recurse: yes

- name: Deploy configuration from template
  ansible.builtin.template:
    src: vaultlockerconfig.j2
    dest: /etc/vaultlocker/vaultlocker.conf
    owner: root
    group: root
    mode: '0600'


- name: lsblk
  ansible.builtin.shell: lsblk
  register: lsblk_print

- debug:
    msg: "{{ lsblk_print }}"

- name: sudo vaultlocker encrypt /dev/sdb
  ansible.builtin.command: sudo vaultlocker encrypt /dev/sdb
  environment:
    VAULT_ADDR: "{{ vault_addr }}"
    VAULT_TOKEN: "{{ vault_token }}"
  register: encrypt

- debug:
    msg: "{{ encrypt }}"

- name: vault kv list vaultlocker
  ansible.builtin.command: vault kv list {{policy_name}}
  environment:
    VAULT_ADDR: "{{ vault_addr }}"
    VAULT_TOKEN: "{{ vault_token }}"
  register: listkv

- debug:
    msg: "{{ listkv.stdout_lines[-1] }}"

- name: vault kv list vaultlocker/hostname
  ansible.builtin.command: vault kv list {{ policy_name }}/"{{ listkv.stdout_lines[-1] }}"
  environment:
    VAULT_ADDR: "{{ vault_addr }}"
    VAULT_TOKEN: "{{ vault_token }}"
  register: data2
- debug:
    msg: "{{ data2 }}"

- name: vault kv get vaultlocker
  ansible.builtin.command: vault kv get {{ policy_name }}/"{{ listkv.stdout_lines[-1] }}""{{ data2.stdout_lines[-1]  }}"
  environment:
    VAULT_ADDR: "{{ vault_addr }}"
    VAULT_TOKEN: "{{ vault_token }}"
  register: data3
- debug:
    msg: "{{ data3 }}"


##### mnt disck command way 

- name: sudo mkfs.ext4
  ansible.builtin.command: sudo mkfs.ext4 /dev/mapper/crypt-"{{ data2.stdout_lines[-1]  }}"
  environment:
    VAULT_ADDR: "{{ vault_addr }}"
    VAULT_TOKEN: "{{ vault_token }}"
  register: data4
- debug:
    msg: "{{ data4 }}"

- name: vault kv list vaultlocker/hostname
  ansible.builtin.command: sudo mkdir -p /mnt/data
  environment:
    VAULT_ADDR: "{{ vault_addr }}"
    VAULT_TOKEN: "{{ vault_token }}"
  register: data5
- debug:
    msg: "{{ data5 }}"

- name: vault kv list vaultlocker/hostname
  ansible.builtin.command: sudo mount /dev/mapper/crypt-"{{ data2.stdout_lines[-1]  }}" /mnt/data
  environment:
    VAULT_ADDR: "{{ vault_addr }}"
    VAULT_TOKEN: "{{ vault_token }}"
  register: data6

- debug:
    msg: "{{ data6 }}"

- name: Deploy configuration from template
  ansible.builtin.template:
    src: decript-locker-unit.j2
    dest: /usr/lib/systemd/system/vaultlocker-decrypt@.service
    owner: root
    group: root
    mode: '644'


# - name: Add a new mount entry to /etc/fstab
#   lineinfile:
#     path: /etc/fstab
#     line: '/dev/mapper/crypt-{{ data2.stdout_lines[-1]  }} /mnt/data ext4 defaults 0 0'
#     state: present

# - name: Modify an existing mount option in /etc/fstab
#   lineinfile:
#     path: /etc/fstab
#     regexp: '^(/dev/sda1\s+/mnt/olddata\s+ext4\s+)([^#\s]+)(.*)$'
#     line: '\1noatime,nodiratime,\2\3'
#     backrefs: yes
#     state: present


##### mnt disck command way 


##### mnt disck ansible way 

# - name: Create mount point directory
#   ansible.builtin.file:
#     path: /mnt/data
#     state: directory
#     mode: '0755'

# - name: Check if device exists
#   ansible.builtin.stat:
#     path: /dev/mapper/crypt-{{ data2.stdout_lines[-1]  }}
#   register: device_stat

# - name: Create ext4 filesystem if device exists
#   ansible.builtin.filesystem:
#     fstype: ext4
#     dev: /dev/mapper/crypt-{{ data2.stdout_lines[-1]  }}
#     force: no
#   when: device_stat.stat.exists

# - name: Mount the directory
#   ansible.builtin.mount:
#     path: /mnt/data
#     src: /dev/mapper/crypt-{{ data2.stdout_lines[-1]  }}
#     fstype: ext4
#     state: mounted
#     opts: defaults
#     dump: 0
#     passno: 2


##### mnt disck ansible way 



    # vault kv list vaultlocker/cryptvm
    # vault kv get vaultlocker/cryptvm/6f738cb1-7c09-4d20-8711-ca5dc607dbe8
    # sudo mkfs.ext4 /dev/mapper/crypt-6f738cb1-7c09-4d20-8711-ca5dc607dbe8
    # sudo mount /dev/mapper/crypt-6f738cb1-7c09-4d20-8711-ca5dc607dbe8 /mnt/data
# - name: Add HashiCorp GPG key
#   ansible.builtin.apt_key:
#     url: https://apt.releases.hashicorp.com/gpg
#     state: present


# - name: Add HashiCorp repo
#   ansible.builtin.apt_repository:
#     repo: "deb [arch={{ ansible_architecture }} signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com {{ ansible_lsb.codename }} main"
#     filename: hashicorp
#     state: present
#     mode: 0644

# - name: Install Vault
#   ansible.builtin.apt:
#     name: vault
#     state: present
#     update_cache: yes


# - name: Copy Vault config
#   copy:
#     src: vault.hcl
#     dest: /etc/vault.d/vault.hcl
#     owner: root
#     group: root
#     mode: 0644

# - name: Ensure data directory exists
#   file:
#     path: /var/vault/data
#     state: directory
#     owner: vault
#     group: vault
#     mode: 0750